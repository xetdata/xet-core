name: commit

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build_and_test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, macos-latest, windows-2019]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: arduino/setup-protoc@v2
        with:
          version: "23.1"
          repo-token: ${{ secrets.DEV_GITHUB_TOKEN }}
      - uses: dtolnay/rust-toolchain@1.75.0
        with:
          components: clippy

      - uses:  Vampire/setup-wsl@v3
        if: runner.os == 'Windows'
      - name: Env
        run: |
          env|sort
      - name: Build and run tests on windows
        if: runner.os == 'Windows'
        shell: wsl-bash {0}
        run: |
          sudo apt update -y
          sudo apt install -y build-essential curl
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs > rust_install.sh
          sh ./rust_install.sh -y
          export PATH="$HOME/.cargo/bin:$PATH"

          cargo install sccache
          export SCCACHE_GHA_ENABLED="on"
          export RUSTC_WRAPPER="$(which sccache)"
          export XET_GLOBAL_DEDUP_POLICY="never"

          # Change directory and build the Rust project
          cd rust
          cargo build --verbose --profile=opt-test

          # Configure Git global settings
          git config --global user.email "operations@xetdata.com"
          git config --global user.name "XetData Automation"

          cargo test --profile=opt-test
      - name: Lint (Linux only)
        if: runner.os == 'Linux'
        run: |
          cd rust
          cargo clippy -r --verbose -- -D warnings # elevates warnings to errors
      - name: Build
        if: runner.os != 'Windows'
        shell: bash
        run: |
          set +x
          export RUST_BACKTRACE=1 

          cd rust
          if [ $RUNNER_OS = 'macOS' ]; then
            brew install openssl@3
            # Upgrading make is required for cargo to play nicely with building openssl
            brew install make
            export PATH="/usr/local/opt/make/libexec/gnubin:$PATH"
          fi
          
          cargo build --verbose --features "strict openssl_vendored" 
      - name: Test Environment
        if: runner.os != 'Windows'
        shell: bash
        run: |
          set +x
          if [ $RUNNER_OS = 'macOS' ]; then
            brew install md5sha1sum
          fi
          cd rust
          
          # we need a basic git configuration for the tests to pass
          git config --global user.email operations@xetdata.com
          git config --global user.name "XetData Automation"
      - name: Test
        if: runner.os != 'Windows'
        shell: bash
        run: |
          set +x
          export RUST_BACKTRACE=1 
          
          cd rust
          cargo test --no-fail-fast --features "strict openssl_vendored"
